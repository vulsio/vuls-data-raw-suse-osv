{
	"id": "openSUSE-SU-2022:0016-1",
	"modified": "2022-01-17T20:11:25Z",
	"published": "2022-01-17T20:11:25Z",
	"related": [
		"CVE-2022-21944"
	],
	"summary": "Security update for watchman",
	"details": "This update for watchman fixes the following issues:\n\n- ship README.suse that explains how to use the template systemd units\n- add user writable bit for systemd service and socket files\n- properly handle state directory creation in /run/watchman/$USER-state. The\n  former approach was susceptible to a local privilege escalation using\n  symlinks (CVE-2022-21944, boo#1194470).\n\n- Added hardening to systemd service(s) (boo#1181400). Modified:\n  * watchman@.service\n\n- removed python2 bindings\n- enabled python3 bindings as python3-watchman\n\n- Changes in 4.8.0:\n\n    * New command `flush-subscriptions` to synchronize subscriptions associated\n      with the current session.\n    * Enforce socket Unix groups more strongly â€” Watchman will now refuse to start\n      if it couldn't gain the right group memberships, as can happen for sites that\n      are experiencing intermittent LDAP connectivity problems.\n    * pywatchman now officially supports Python 3. pywatchman will return Unicode\n      strings (possibly with surrogate escapes) by default, but can optionally return\n      bytestrings. Note that on Python 3, pywatchman requires Watchman 4.8 and above.\n      The Python 2 interface and requirements remain unchanged.\n    * Prior to 4.8, methods on the Java WatchmanClient that returned\n    \tListenableFutures would swallow exceptions and hang in an unfinished state\n    \tunder situations like socket closure or thread death.  This has been fixed, and\n    \tnow ListenableFutures propagate exception conditions immediately.  (Note that\n    \tthis is typically unrecoverable, and users should create a new WatchmanClient\n    \tto re-establish communication with Watchman.)  See #412.\n    * The minimum Java version for the Watchman Java client has always been 1.7,\n    \tbut it was incorrectly described to be 1.6.  The Java client's build file has\n    \tbeen fixed accordingly.\n    * Watchman was converted from C to C++.  The conversion exposed several\n    \tconcurrency bugs, all of which have now been fixed.\n    * Subscription queries are now executed in the context of the client thread,\n    \twhich means that subscriptions are dispatched in parallel.  Previously,\n    \tsubscriptions would be serially dispatched and block the disk IO thread.\n    * Triggers are now dispatched in parallel and waits are managed in their own\n    \tthreads (one thread per trigger).  This improves concurrency and resolves a\n    \tcouple of waitpid related issues where watchman may not reap spawned children\n    \tin a timely fashion, or may spin on CPU until another child is spawned.\n    * Fixed an object lifecycle management issue that could cause a crash when\n      aging out old/transient files.\n    * Implement an upgraded wire protocol, BSERv2, on the server and in pywatchman.\n    \tBSERv2 can carry information about string encoding over the wire. This lets\n    \tpywatchman convert to Unicode strings on Python 3. Clients and servers know how\n    \tto  transparently fall back to BSERv1.\n  - Changes in 4.9.0:\n    * New field: `content.sha1hex`.  This field expands to the SHA1 hash of\n      the file contents, expressed in hex digits (40 character hex string).\n      Watchman maintains a cache of the content hashes and can compute the\n      hash on demand and also heuristically as files are changed.  This is\n      useful for tooling that wants to perform more intelligent cache invalidation\n      or build artifact fetching from content addressed storage.\n    * Fixed an issue that resulted in the perf logging thread deadlocking when\n      `perf_logger_command` is enabled in the global configuration\n    * Fixed an issue where queries larger than 1MB would likely result in\n      a PDU error response.\n    * Reduced lock contention for subscriptions that do no use the advanced\n      settling (`drop`, `defer`) options.\n    * Fixed `since` generator behavior when using unix timestamps rather than\n      the preferred clock string syntax\n    * Improved the reporting of 'new' files in watchman results\n    * Improved performance of handling changes on case insensitive filesystems\n    * pywatchman: the python wheel format is used for publishing watchman pypi package\n    * pywatchman: now watchman path is configurable in python client\n    * pywatchman: now python client can be used as a context manager\n",
	"affected": [
		{
			"package": {
				"ecosystem": "SUSE:Package Hub 15 SP3",
				"name": "watchman",
				"purl": "purl:rpm/suse/watchman&distro=SUSE%20Package%20Hub%2015%20SP3"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "4.9.0-bp153.2.3.1"
						}
					]
				}
			],
			"ecosystem_specific": {
				"binaries": [
					{
						"python3-watchman": "1.4.0-bp153.2.3.1",
						"watchman": "4.9.0-bp153.2.3.1"
					}
				]
			}
		},
		{
			"package": {
				"ecosystem": "openSUSE:Leap 15.3",
				"name": "watchman",
				"purl": "purl:rpm/suse/watchman&distro=openSUSE%20Leap%2015.3"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "4.9.0-bp153.2.3.1"
						}
					]
				}
			],
			"ecosystem_specific": {
				"binaries": [
					{
						"python3-watchman": "1.4.0-bp153.2.3.1",
						"watchman": "4.9.0-bp153.2.3.1"
					}
				]
			}
		}
	],
	"references": [
		{
			"type": "ADVISORY",
			"url": "https://lists.opensuse.org/archives/list/security-announce@lists.opensuse.org/thread/KNMY24O54KQLQYLHBRWLMCEO42RIRELW/"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1181400"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1194470"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2022-21944"
		}
	]
}
