{
	"id": "SUSE-SU-2020:1121-1",
	"modified": "2020-04-28T05:15:55Z",
	"published": "2020-04-28T05:15:55Z",
	"related": [
		"CVE-2017-15298",
		"CVE-2018-11233",
		"CVE-2018-11235",
		"CVE-2018-17456",
		"CVE-2019-1348",
		"CVE-2019-1349",
		"CVE-2019-1350",
		"CVE-2019-1351",
		"CVE-2019-1352",
		"CVE-2019-1353",
		"CVE-2019-1354",
		"CVE-2019-1387",
		"CVE-2019-19604",
		"CVE-2020-11008",
		"CVE-2020-5260"
	],
	"summary": "Security update for git",
	"details": "This update for git fixes the following issues:\n\nSecurity issues fixed:\n\n* CVE-2020-11008: Specially crafted URLs may have tricked the\n  credentials helper to providing credential information that\n  is not appropriate for the protocol in use and host being\n  contacted (bsc#1169936)\n\ngit was updated to 2.26.1 (bsc#1169786, jsc#ECO-1628, bsc#1149792)\n\n- Fix git-daemon not starting after conversion from sysvinit to systemd service\n  (bsc#1169605).\n\n* CVE-2020-5260: Specially crafted URLs with newline characters\n  could have been used to make the Git client to send credential\n  information for a wrong host to the attacker's site bsc#1168930\n\ngit 2.26.0 (bsc#1167890, jsc#SLE-11608):\n\n* 'git rebase' now uses a different backend that is based on the\n  'merge' machinery by default. The 'rebase.backend' configuration\n   variable reverts to old behaviour when set to  'apply'\n* Improved handling of sparse checkouts\n* Improvements to many commands and internal features\n\ngit 2.25.2:\n\n* bug fixes to various subcommands in specific operations\n\ngit 2.25.1:\n\n* 'git commit' now honors advise.statusHints\n* various updates, bug fixes and documentation updates\n\ngit 2.25.0\n\n* The branch description ('git branch --edit-description') has been\n  used to fill the body of the cover letters by the format-patch\n  command; this has been enhanced so that the subject can also be\n  filled.\n* A few commands learned to take the pathspec from the standard input\n  or a named file, instead of taking it as the command line\n  arguments, with the '--pathspec-from-file' option.\n* Test updates to prepare for SHA-2 transition continues.\n* Redo 'git name-rev' to avoid recursive calls.\n* When all files from some subdirectory were renamed to the root\n  directory, the directory rename heuristics would fail to detect that\n  as a rename/merge of the subdirectory to the root directory, which has\n  been corrected.\n* HTTP transport had possible allocator/deallocator mismatch, which\n  has been corrected.\n\ngit 2.24.1:\n\n* CVE-2019-1348: The --export-marks option of fast-import is\n  exposed also via the in-stream command feature export-marks=...\n  and it allows overwriting arbitrary paths (bsc#1158785)\n* CVE-2019-1349: on Windows, when submodules are cloned\n  recursively, under certain circumstances Git could be fooled\n  into using the same Git directory twice (bsc#1158787)\n* CVE-2019-1350: Incorrect quoting of command-line arguments\n  allowed remote code execution during a recursive clone in\n  conjunction with SSH URLs (bsc#1158788)\n* CVE-2019-1351: on Windows mistakes drive letters outside of\n  the US-English alphabet as relative paths (bsc#1158789)\n* CVE-2019-1352: on Windows was unaware of NTFS Alternate Data\n  Streams (bsc#1158790)\n* CVE-2019-1353: when run in the Windows Subsystem for Linux\n  while accessing a working directory on a regular Windows\n  drive, none of the NTFS protections were active (bsc#1158791)\n* CVE-2019-1354: on Windows refuses to write tracked files with\n  filenames that contain backslashes (bsc#1158792)\n* CVE-2019-1387: Recursive clones vulnerability that is caused\n  by too-lax validation of submodule names, allowing very\n  targeted attacks via remote code execution in recursive\n  clones (bsc#1158793)\n* CVE-2019-19604: a recursive clone followed by a submodule\n  update could execute code contained within the repository\n  without the user explicitly having asked for that (bsc#1158795)\n\ngit 2.24.0\n\n* The command line parser learned '--end-of-options' notation.\n* A mechanism to affect the default setting for a (related) group of\n  configuration variables is introduced.\n* 'git fetch' learned '--set-upstream' option to help those who first\n  clone from their private fork they intend to push to, add the true\n  upstream via 'git remote add' and then 'git fetch' from it.\n* fixes and improvements to UI, workflow and features, bash completion fixes\n\ngit 2.23.0:\n\n* The '--base' option of 'format-patch' computed the patch-ids for\n  prerequisite patches in an unstable way, which has been updated\n  to compute in a way that is compatible with 'git patch-id\n  --stable'.\n* The 'git log' command by default behaves as if the --mailmap\n  option was given.\n* fixes and improvements to UI, workflow and features\n\ngit 2.22.1\n\n* A relative pathname given to 'git init --template=<path> <repo>'\n  ought to be relative to the directory 'git init' gets invoked in,\n  but it instead was made relative to the repository, which has been\n  corrected.\n* 'git worktree add' used to fail when another worktree connected to\n  the same repository was corrupt, which has been corrected.\n* 'git am -i --resolved' segfaulted after trying to see a commit as\n  if it were a tree, which has been corrected.\n* 'git merge --squash' is designed to update the working tree and the\n  index without creating the commit, and this cannot be countermanded\n  by adding the '--commit' option; the command now refuses to work\n  when both options are given.\n* Update to Unicode 12.1 width table.\n* 'git request-pull' learned to warn when the ref we ask them to pull\n  from in the local repository and in the published repository are\n  different.\n* 'git fetch' into a lazy clone forgot to fetch base objects that are\n  necessary to complete delta in a thin packfile, which has been\n  corrected.\n* The URL decoding code has been updated to avoid going past the end\n  of the string while parsing %-<hex>-<hex> sequence.\n* 'git clean' silently skipped a path when it cannot lstat() it; now\n  it gives a warning.\n* 'git rm' to resolve a conflicted path leaked an internal message\n  'needs merge' before actually removing the path, which was\n  confusing. This has been corrected.\n* Many more bugfixes and code cleanups.\n\n- removal of SuSEfirewall2 service, since SuSEfirewall2 has been replaced by\n  firewalld.\n\n- partial fix for git instaweb giving 500 error (bsc#1112230)\n\ngit 2.22.0 \n\n* The filter specification '--filter=sparse:path=<path>' used to\n  create a lazy/partial clone has been removed. Using a blob that is\n  part of the project as sparse specification is still supported with\n  the '--filter=sparse:oid=<blob>' option\n* 'git checkout --no-overlay' can be used to trigger a new mode of\n  checking out paths out of the tree-ish, that allows paths that\n  match the pathspec that are in the current index and working tree\n  and are not in the tree-ish.\n* Four new configuration variables {author,committer}.{name,email}\n  have been introduced to override user.{name,email} in more specific\n  cases.\n* 'git branch' learned a new subcommand '--show-current'.\n* The command line completion (in contrib/) has been taught to\n  complete more subcommand parameters.\n* The completion helper code now pays attention to repository-local\n  configuration (when available), which allows --list-cmds to honour\n  a repository specific setting of completion.commands, for example.\n* The list of conflicted paths shown in the editor while concluding a\n  conflicted merge was shown above the scissors line when the\n  clean-up mode is set to 'scissors', even though it was commented\n  out just like the list of updated paths and other information to\n  help the user explain the merge better.\n* 'git rebase' that was reimplemented in C did not set ORIG_HEAD\n  correctly, which has been corrected.\n* 'git worktree add' used to do a 'find an available name with stat\n  and then mkdir', which is race-prone. This has been fixed by using\n  mkdir and reacting to EEXIST in a loop. \n\n- Move to DocBook 5.x. Asciidoctor 2.x no longer supports the legacy\n  DocBook 4.5 format.\n\n- update git-web AppArmor profile for bash and tar usrMerge (bsc#1132350)\n\ngit 2.21.0\n\n* Historically, the '-m' (mainline) option can only be used for 'git\n  cherry-pick' and 'git revert' when working with a merge commit.\n  This version of Git no longer warns or errors out when working with\n  a single-parent commit, as long as the argument to the '-m' option\n  is 1 (i.e. it has only one parent, and the request is to pick or\n  revert relative to that first parent). Scripts that relied on the\n  behaviour may get broken with this change.\n* Small fixes and features for fast-export and fast-import.\n* The 'http.version' configuration variable can be used with recent\n  enough versions of cURL library to force the version of HTTP used\n  to talk when fetching and pushing.\n* 'git push $there $src:$dst' rejects when $dst is not a fully\n    qualified refname and it is not clear what the end user meant.\n* Update 'git multimail' from the upstream.\n* A new date format '--date=human' that morphs its output depending\n  on how far the time is from the current time has been introduced.\n  '--date=auto:human' can be used to use this new format (or any\n  existing format) when the output is going to the pager or to the\n  terminal, and otherwise the default format.\n\n- Fix worktree creation race (bsc#1114225).\n- add shadow build dependency to the -daemon subpackage.\n\n\ngit 2.20.1:\n\n* portability fixes\n* 'git help -a' did not work well when an overly long alias was\n  defined\n* no longer squelched an error message when the run_command API\n  failed to run a missing command\n\ngit 2.20.0\n\n* 'git help -a' now gives verbose output (same as 'git help -av').\n  Those who want the old output may say 'git help --no-verbose -a'..\n* 'git send-email' learned to grab address-looking string on any\n  trailer whose name ends with '-by'.\n* 'git format-patch' learned new '--interdiff' and '--range-diff'\n  options to explain the difference between this version and the\n  previous attempt in the cover letter (or after the three-dashes as\n   a comment).\n* Developer builds now use -Wunused-function compilation option.\n* Fix a bug in which the same path could be registered under multiple\n  worktree entries if the path was missing (for instance, was removed\n  manually).  Also, as a convenience, expand the number of cases in\n  which --force is applicable.\n* The overly large Documentation/config.txt file have been split into\n  million little pieces.  This potentially allows each individual piece\n  to be included into the manual page of the command it affects more easily.\n* Malformed or crafted data in packstream can make our code attempt\n  to read or write past the allocated buffer and abort, instead of\n  reporting an error, which has been fixed.\n* Fix for a long-standing bug that leaves the index file corrupt when\n  it shrinks during a partial commit.\n* 'git merge' and 'git pull' that merges into an unborn branch used\n  to completely ignore '--verify-signatures', which has been\n  corrected.\n* ...and much more features and fixes\n\ngit 2.19.2:\n\n* various bug fixes for multiple subcommands and operations\n\ngit 2.19.1:\n\n* CVE-2018-17456: Specially crafted .gitmodules files may have\n  allowed arbitrary code execution when the repository is cloned\n  with --recurse-submodules (bsc#1110949)\n\ngit 2.19.0:\n\n* 'git diff' compares the index and the working tree.  For paths\n  added with intent-to-add bit, the command shows the full contents\n  of them as added, but the paths themselves were not marked as new\n  files.  They are now shown as new by default.\n* 'git apply' learned the '--intent-to-add' option so that an\n  otherwise working-tree-only application of a patch will add new\n  paths to the index marked with the 'intent-to-add' bit.\n* 'git grep' learned the '--column' option that gives not just the\n  line number but the column number of the hit.\n* The '-l' option in 'git branch -l' is an unfortunate short-hand for\n  '--create-reflog', but many users, both old and new, somehow expect\n  it to be something else, perhaps '--list'.  This step warns when '-l'\n  is used as a short-hand for '--create-reflog' and warns about the\n  future repurposing of the it when it is used.\n* The userdiff pattern for .php has been updated.\n* The content-transfer-encoding of the message 'git send-email' sends\n  out by default was 8bit, which can cause trouble when there is an\n  overlong line to bust RFC 5322/2822 limit.  A new option 'auto' to\n  automatically switch to quoted-printable when there is such a line\n  in the payload has been introduced and is made the default.\n* 'git checkout' and 'git worktree add' learned to honor\n  checkout.defaultRemote when auto-vivifying a local branch out of a\n  remote tracking branch in a repository with multiple remotes that\n  have tracking branches that share the same names.\n  (merge 8d7b558bae ab/checkout-default-remote later to maint).\n* 'git grep' learned the '--only-matching' option.\n* 'git rebase --rebase-merges' mode now handles octopus merges as\n  well.\n* Add a server-side knob to skip commits in exponential/fibbonacci\n  stride in an attempt to cover wider swath of history with a smaller\n  number of iterations, potentially accepting a larger packfile\n  transfer, instead of going back one commit a time during common\n  ancestor discovery during the 'git fetch' transaction.\n  (merge 42cc7485a2 jt/fetch-negotiator-skipping later to maint).\n* A new configuration variable core.usereplacerefs has been added,\n  primarily to help server installations that want to ignore the\n  replace mechanism altogether.\n* Teach 'git tag -s' etc. a few configuration variables (gpg.format\n  that can be set to 'openpgp' or 'x509', and gpg.<format>.program\n  that is used to specify what program to use to deal with the format)\n  to allow x.509 certs with CMS via 'gpgsm' to be used instead of\n  openpgp via 'gnupg'.\n* Many more strings are prepared for l10n.\n* 'git p4 submit' learns to ask its own pre-submit hook if it should\n  continue with submitting.\n* The test performed at the receiving end of 'git push' to prevent\n  bad objects from entering repository can be customized via\n  receive.fsck.* configuration variables; we now have gained a\n  counterpart to do the same on the 'git fetch' side, with\n  fetch.fsck.* configuration variables.\n* 'git pull --rebase=interactive' learned 'i' as a short-hand for\n  'interactive'.\n* 'git instaweb' has been adjusted to run better with newer Apache on\n  RedHat based distros.\n* 'git range-diff' is a reimplementation of 'git tbdiff' that lets us\n  compare individual patches in two iterations of a topic.\n* The sideband code learned to optionally paint selected keywords at\n  the beginning of incoming lines on the receiving end.\n* 'git branch --list' learned to take the default sort order from the\n  'branch.sort' configuration variable, just like 'git tag --list'\n  pays attention to 'tag.sort'.\n* 'git worktree' command learned '--quiet' option to make it less\n  verbose.\n\ngit 2.18.0:\n\n* improvements to rename detection logic\n* When built with more recent cURL, GIT_SSL_VERSION can now\n  specify 'tlsv1.3' as its value.\n* 'git mergetools' learned talking to guiffy.\n* various other workflow improvements and fixes\n* performance improvements and other developer visible fixes\n\ngit 2.17.1\n\n* Submodule 'names' come from the untrusted .gitmodules file, but\n  we blindly append them to $GIT_DIR/modules to create our on-disk\n  repo paths. This means you can do bad things by putting '../'\n  into the name. We now enforce some rules for submodule names\n  which will cause Git to ignore these malicious names\n  (CVE-2018-11235, bsc#1095219)\n* It was possible to trick the code that sanity-checks paths on\n  NTFS into reading random piece of memory\n  (CVE-2018-11233, bsc#1095218)\n* Support on the server side to reject pushes to repositories\n  that attempt to create such problematic .gitmodules file etc.\n  as tracked contents, to help hosting sites protect their\n  customers by preventing malicious contents from spreading.\n\ngit 2.17.0:\n\n* 'diff' family of commands learned '--find-object=<object-id>' option\n   to limit the findings to changes that involve the named object.\n* 'git format-patch' learned to give 72-cols to diffstat, which is\n  consistent with other line length limits the subcommand uses for\n  its output meant for e-mails.\n* The log from 'git daemon' can be redirected with a new option; one\n  relevant use case is to send the log to standard error (instead of\n  syslog) when running it from inetd.\n* 'git rebase' learned to take '--allow-empty-message' option.\n* 'git am' has learned the '--quit' option, in addition to the\n  existing '--abort' option; having the pair mirrors a few other\n  commands like 'rebase' and 'cherry-pick'.\n* 'git worktree add' learned to run the post-checkout hook, just like\n  'git clone' runs it upon the initial checkout.\n* 'git tag' learned an explicit '--edit' option that allows the\n  message given via '-m' and '-F' to be further edited.\n* 'git fetch --prune-tags' may be used as a handy short-hand for\n  getting rid of stale tags that are locally held.\n* The new '--show-current-patch' option gives an end-user facing way\n  to get the diff being applied when 'git rebase' (and 'git am')\n  stops with a conflict.\n* 'git add -p' used to offer '/' (look for a matching hunk) as a\n  choice, even there was only one hunk, which has been corrected.\n  Also the single-key help is now given only for keys that are\n  enabled (e.g. help for '/' won't be shown when there is only one\n  hunk).\n* Since Git 1.7.9, 'git merge' defaulted to --no-ff (i.e. even when\n  the side branch being merged is a descendant of the current commit,\n  create a merge commit instead of fast-forwarding) when merging a\n  tag object.  This was appropriate default for integrators who pull\n  signed tags from their downstream contributors, but caused an\n  unnecessary merges when used by downstream contributors who\n  habitually 'catch up' their topic branches with tagged releases\n  from the upstream.  Update 'git merge' to default to --no-ff only\n  when merging a tag object that does *not* sit at its usual place in\n  refs/tags/ hierarchy, and allow fast-forwarding otherwise, to\n  mitigate the problem.\n* 'git status' can spend a lot of cycles to compute the relation\n  between the current branch and its upstream, which can now be\n  disabled with '--no-ahead-behind' option.\n* 'git diff' and friends learned funcname patterns for Go language\n  source files.\n* 'git send-email' learned '--reply-to=<address>' option.\n* Funcname pattern used for C# now recognizes 'async' keyword.\n* In a way similar to how 'git tag' learned to honor the pager\n  setting only in the list mode, 'git config' learned to ignore the\n  pager setting when it is used for setting values (i.e. when the\n  purpose of the operation is not to 'show').\n",
	"affected": [
		{
			"package": {
				"ecosystem": "SUSE:Linux Enterprise Module for Basesystem 15 SP1",
				"name": "git",
				"purl": "purl:rpm/suse/git&distro=SUSE%20Linux%20Enterprise%20Module%20for%20Basesystem%2015%20SP1"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "2.26.1-3.25.2"
						}
					]
				}
			],
			"ecosystem_specific": {
				"binaries": [
					{
						"git-core": "2.26.1-3.25.2"
					}
				]
			}
		},
		{
			"package": {
				"ecosystem": "SUSE:Linux Enterprise Module for Development Tools 15 SP1",
				"name": "git",
				"purl": "purl:rpm/suse/git&distro=SUSE%20Linux%20Enterprise%20Module%20for%20Development%20Tools%2015%20SP1"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "2.26.1-3.25.2"
						}
					]
				}
			],
			"ecosystem_specific": {
				"binaries": [
					{
						"git": "2.26.1-3.25.2",
						"git-arch": "2.26.1-3.25.2",
						"git-cvs": "2.26.1-3.25.2",
						"git-daemon": "2.26.1-3.25.2",
						"git-doc": "2.26.1-3.25.2",
						"git-email": "2.26.1-3.25.2",
						"git-gui": "2.26.1-3.25.2",
						"git-svn": "2.26.1-3.25.2",
						"git-web": "2.26.1-3.25.2",
						"gitk": "2.26.1-3.25.2"
					}
				]
			}
		}
	],
	"references": [
		{
			"type": "ADVISORY",
			"url": "https://www.suse.com/support/update/announcement/2020/suse-su-20201121-1/"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1063412"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1095218"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1095219"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1110949"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1112230"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1114225"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1132350"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1149792"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1156651"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158785"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158787"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158788"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158789"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158790"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158791"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158792"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158793"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1158795"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1167890"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1168930"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1169605"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1169786"
		},
		{
			"type": "REPORT",
			"url": "https://bugzilla.suse.com/1169936"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2017-15298"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2018-11233"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2018-11235"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2018-17456"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1348"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1349"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1350"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1351"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1352"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1353"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1354"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-1387"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2019-19604"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2020-11008"
		},
		{
			"type": "WEB",
			"url": "https://www.suse.com/security/cve/CVE-2020-5260"
		}
	]
}
